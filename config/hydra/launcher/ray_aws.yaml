# @package hydra.launcher
_target_: hydra_plugins.hydra_ray_launcher.ray_aws_launcher.RayAWSLauncher
env_setup:
  pip_packages: {}
  commands: []
ray:
  init:
    address: localhost:6379
  remote:
    num_gpus: 0.25
  cluster:
    cluster_name: gnosis-cluster
    min_workers: 0
    max_workers: 7
    initial_workers: 0
    autoscaling_mode: default
    target_utilization_fraction: 1.0
    idle_timeout_minutes: 5
    docker:
      image: 'samuelstanton/gnosis:py3.8_cuda11'
      container_name: 'gnosis-container'
      pull_before_run: true
      run_options: ["--gpus 'all'"]
    provider:
      type: aws
      region: us-east-2
      availability_zone: us-east-2a,us-east-2b
      cache_stopped_nodes: false
      key_pair:
        key_name: hydra
    auth:
      ssh_user: ubuntu
    head_node:
      IamInstanceProfile:
        Arn: arn:aws:iam::312649332277:instance-profile/ray-head-v1
      InstanceType: p2.xlarge
      ImageId: ami-08e16447bd5caf26a
    worker_nodes:
      IamInstanceProfile:
        Arn: arn:aws:iam::312649332277:instance-profile/ray-worker-v1
      InstanceType: p2.xlarge
      ImageId: ami-08e16447bd5caf26a
    file_mounts: {}
    initialization_commands: []
    setup_commands: []
    head_setup_commands: []
    worker_setup_commands: []
    head_start_ray_commands:
      - ray stop
      - ulimit -n 65536
      - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml
    worker_start_ray_commands:
      - ray stop
      - ulimit -n 65536
      - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
stop_cluster: true
sync_up:
  source_dir: null
  target_dir: null
  include: []
  exclude: []
sync_down:
  source_dir: null
  target_dir: null
  include: []
  exclude: []
