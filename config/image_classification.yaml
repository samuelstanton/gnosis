defaults:
  - dataset: cifar10
  - classifier: preresnet
  - density_model: sngan
  - logger: local
  - loss: ts_soft_cross_ent
  - override hydra/sweeper: basic
  - override hydra/launcher: basic

augmentation:
  random_apply:
    _target_: torchvision.transforms.RandomApply
    p: 1.
  #geometric
  rotation:
    _target_: torchvision.transforms.RandomRotation
    degrees: 90
  crop:
    _target_: torchvision.transforms.RandomCrop
    size: ${dataset.input_size}
    padding: 4
  horizontal_flip:
    _target_: torchvision.transforms.RandomHorizontalFlip
  vertical_flip:
    _target_: torchvision.transforms.RandomVerticalFlip
  perspective:
    _target_: torchvision.transforms.RandomPerspective
    distortion_scale: 0.5
    p: 0.5
  #colorspace
  grayscale:
    _target_: torchvision.transforms.RandomGrayscale
    p: 0.1
  colorjitter:
    _target_: torchvision.transforms.ColorJitter
    brightness: 0.2
    contrast: 0.2
    saturation: 0.2
    hue: 0.2
  gaussian_blur:
    _target_: torchvision.transforms.GaussianBlur
    kernel_size: 3
    sigma:
      - 0.1
      - 2.0
  transforms_list: crop,horizontal_flip
  normalization: unitcube

teacher:
  depth: ${classifier.depth}
  num_components: 1
  use_ckpts: True
  shuffle_ckpts: False
  ckpt_dir:
            "data/experiments/image_classification/classifier_checkpoints/\
            ${classifier.name}${teacher.depth}_${dataset.name}_${augmentation.normalization}"

trainer:
  num_epochs: 200
  eval_period: 10
  eval_dataset: test
  optimizer:
    _target_: torch.optim.SGD
    lr: 5e-2
    weight_decay: 1e-4
    momentum: 0.9
    nesterov: True
  lr_scheduler:
    _target_: torch.optim.lr_scheduler.CosineAnnealingLR
    T_max: ${trainer.num_epochs}
    eta_min: 1e-4
  distill_teacher: True
  synth_aug:
    ratio: 0.

dataloader:
  _target_: torch.utils.data.DataLoader
  batch_size: 128
  shuffle: True

seed:
trial_id: 0
project_name: gnosis
version: v0.0.10

# Directories for loading and storing data
project_dir: cwd
data_dir: data/experiments/image_classification
log_dir: ${data_dir}/${exp_name}/trial_${trial_id}/${now:%Y-%m-%d_%H-%M-%S}
exp_name:
        "synth_aug_${trainer.synth_aug.ratio}_${dataset.name}_${loss.name}_alpha_${loss.alpha}_${version}/\
         preresnet${teacher.depth}_${teacher.num_components}-preresnet${classifier.depth}_1"

# Checkpointing
ckpt_store: local
s3_bucket: samuel-stanton-personal-bucket

hydra:
  run:
    dir: ./${log_dir}
  sweep:
    dir: ./${log_dir}
    subdir: .
